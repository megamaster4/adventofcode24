import numpy as np

from day_08.main import create_matrix_from_text, build_antenna_points, process_antenna_points, process_antenna_points_2


def test_day_08_task_01():
    example = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............"""

    result = """......#....#
...#....0...
....#0....#.
..#....0....
....0....#..
.#....A.....
...#........
#......#....
........A...
.........A..
..........#.
..........#."""

    matrix = create_matrix_from_text(example)
    antenna_points = build_antenna_points(matrix)
    
    result_matrix, unique_locations = process_antenna_points(matrix, antenna_points, antenna_points.keys())
    assert np.array_equal(result_matrix, create_matrix_from_text(result))
    assert len(unique_locations) == 14


def test_day_08_task_02_single():
    example = """T.........
...T......
.T........
..........
..........
..........
..........
..........
..........
.........."""

    result = """T....#....
...T......
.T....#...
.........#
..#.......
..........
...#......
..........
....#.....
.........."""

    matrix = create_matrix_from_text(example)
    antenna_points = build_antenna_points(matrix)
    
    result_matrix, unique_locations = process_antenna_points_2(matrix, antenna_points, antenna_points.keys())
    assert np.array_equal(result_matrix, create_matrix_from_text(result))
    assert len(unique_locations) == 9


def test_day_08_task_02():
    example = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............"""

    result = """##....#....#
.#.#....0...
..#.#0....#.
..##...0....
....0....#..
.#...#A....#
...#..#.....
#....#.#....
..#.....A...
....#....A..
.#........#.
...#......##"""

    matrix = create_matrix_from_text(example)
    antenna_points = build_antenna_points(matrix)
    
    result_matrix, unique_locations = process_antenna_points_2(matrix, antenna_points, antenna_points.keys())
    assert np.array_equal(result_matrix, create_matrix_from_text(result))
    assert len(unique_locations) == 34